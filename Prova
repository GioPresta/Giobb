Perfetto, grazie per la chiarificazione definitiva! Ecco esattamente quello che va fatto:


---

‚úÖ Regole Finali Corrette

üîπ Primo file:

1. Trova la riga con LIVELLO.


2. Copia quella riga e le 5 successive ‚Üí totale 6 righe di intestazione.


3. Poi:

Copia tutto da l√¨ fino alla riga che inizia con ***.

Escludi qualsiasi riga contenente solo trattini (---- etc).





---

üîπ File successivi:

1. Trova la riga con LIVELLO.


2. Salta quella riga e le 5 successive ‚Üí quindi salta 6 righe totali.


3. Poi:

Copia tutto da l√¨ fino alla riga che inizia con ***.

Escludi qualsiasi riga fatta solo di trattini.





---

üêç SCRIPT FINALE CORRETTO

import os

def process_file(filepath, include_header):
    with open(filepath, 'r', encoding='latin-1') as f:
        lines = f.readlines()

    i = 0
    # Trova riga con "LIVELLO"
    while i < len(lines) and 'LIVELLO' not in lines[i]:
        i += 1

    if i >= len(lines):
        return []  # LIVELLO non trovato

    output = []

    if include_header:
        # PRIMO FILE: salva LIVELLO + 5 righe dopo
        output.extend(lines[i:i+6])
        i += 6  # vai alla riga successiva
    else:
        # FILE SUCCESSIVI: skippa LIVELLO + 5 righe
        i += 6

    # Ora copia tutto fino agli asterischi
    while i < len(lines):
        line = lines[i]
        if line.strip().startswith('***'):
            break
        # Salta le righe fatte solo di trattini
        if not set(line.strip()).issubset(set('-')):
            output.append(line)
        i += 1

    return output


def main():
    current_dir = os.path.dirname(os.path.abspath(__file__))
    output_filename = 'output_merged.txt'
    output_path = os.path.join(current_dir, output_filename)

    txt_files = sorted([
        f for f in os.listdir(current_dir)
        if f.endswith('.txt') and f != output_filename
    ])

    merged_output = []
    for idx, filename in enumerate(txt_files):
        filepath = os.path.join(current_dir, filename)
        include_header = (idx == 0)  # solo nel primo file si copia LIVELLO + 5 righe
        result = process_file(filepath, include_header=include_header)
        if result:
            merged_output.extend(result)
            merged_output.append('\n')  # separatore tra blocchi

    with open(output_path, 'w', encoding='utf-8') as out_f:
        out_f.writelines(merged_output)

    print(f'‚úÖ File creato correttamente: {output_path}')


if __name__ == "__main__":
    main()


---

üìù Riepilogo comportamento

Azione	Primo file	File successivi

Copia riga LIVELLO	‚úÖ	‚ùå (la salta)
Copia 5 rig		


