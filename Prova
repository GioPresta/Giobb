Perfetto, ripartiamo da capo e fissiamo la logica definitiva con chiarezza.


---

‚úÖ Obiettivo del nuovo script

Vogliamo unire pi√π file .txt, salvando solo i dati rilevanti in modo coerente, secondo questa logica:


---

üîπ Primo file:

1. Trova la riga con LIVELLO.


2. Estrai 6 righe totali, da LIVELLO fino alla quinta riga dopo.


3. Salta 4 righe.


4. Poi:

Copia tutte le righe fino a una riga che inizia con *** (asterischi).

Includi righe fatte di trattini se ci sono, come da tua richiesta.





---

üîπ File successivi:

1. Trova la riga con LIVELLO.


2. Salta 10 righe a partire da l√¨ (quindi LIVELLO + 5 righe + 4 righe di skip).


3. Poi:

Copia tutte le righe fino a una riga che inizia con *** (asterischi).

Anche qui: non escludere righe con trattini ‚Äî vanno mantenute.





---

üêç Script Python Finale

import os

def process_file(filepath, include_header):
    with open(filepath, 'r', encoding='latin-1') as f:
        lines = f.readlines()

    output = []
    i = 0

    # Trova la riga con "LIVELLO"
    while i < len(lines):
        if 'LIVELLO' in lines[i]:
            break
        i += 1

    if i >= len(lines):
        return []  # LIVELLO non trovato

    if include_header:
        # Primo file: prendi 6 righe da LIVELLO, salta 4, poi copia
        header = lines[i:i+6]
        output.extend(header)
        i += 10  # 6 righe + 4 righe di skip
    else:
        # File successivi: salta 10 righe da LIVELLO compreso
        i += 10

    # Copia tutto fino alla riga che inizia con asterischi
    while i < len(lines):
        if lines[i].strip().startswith('***'):
            break
        output.append(lines[i])
        i += 1

    return output


def main():
    current_dir = os.path.dirname(os.path.abspath(__file__))
    txt_files = [f for f in os.listdir(current_dir) if f.endswith('.txt')]
    txt_files.sort()

    merged_output = []
    for idx, filename in enumerate(txt_files):
        filepath = os.path.join(current_dir, filename)
        include_header = (idx == 0)
        result = process_file(filepath, include_header)
        if result:
            merged_output.extend(result)
            merged_output.append('\n')  # Separatore vuoto tra file

    output_path = os.path.join(current_dir, 'output_merged.txt')
    with open(output_path, 'w', encoding='utf-8') as out_f:
        out_f.writelines(merged_output)

    print(f'‚úÖ File creato correttamente: {output_path}')


if __name__ == "__main__":
    main()


---

üìÇ Output finale

File output_merged.txt nella stessa directory dello script.

Solo l‚Äôintestazione del primo file.

Tutti i dati rilevanti dei file successivi coerenti.

Nessun nome file, nessuna intestazione superflua.

Nessun filtro sui trattini: vengono mantenuti.


Fammi sapere se:

Vuoi includere anche la riga degli asterischi come ‚Äúfine blocco‚Äù.

Vuoi esportarlo anche in .csv o .xlsx.


Pronto per essere usato cos√¨ com‚Äô√®!

