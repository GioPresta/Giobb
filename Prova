Perfetto! Qui sotto trovi lo script completo con:

Le due funzioni:

rimuovi_intestazione(...) per eliminare le prime 3 righe

converti_txt_in_csv(...) per generare il CSV con gestione della colonna ‚ÄúErrore‚Äù


Un main() completo che esegue l‚Äôintera pipeline in ordine



---

‚úÖ Script Python finale completo

import re

# === FASE 1: Rimuove le prime 3 righe del file ===
def rimuovi_intestazione(path_txt, path_pulito):
    with open(path_txt, 'r', encoding='latin-1') as f:
        righe = f.readlines()
    righe_pulite = righe[3:]
    with open(path_pulito, 'w', encoding='latin-1') as f:
        f.writelines(righe_pulite)
    print(f"‚úÖ File pulito scritto in: {path_pulito}")

# === FASE 2: Converte il file pulito in CSV strutturato ===
def converti_txt_in_csv(path_txt_pulito, path_csv_output):
    with open(path_txt_pulito, 'r', encoding='latin-1') as f:
        righe = f.readlines()

    righe_formattate = []
    riga_corrente = []
    in_errore = False
    errore_buffer = ''

    for riga in righe:
        testo = riga.rstrip('\n')

        if testo.startswith('   ') and not testo.startswith('    '):  # Nuova riga CSV
            if riga_corrente:
                if in_errore:
                    riga_corrente.append(errore_buffer.strip())
                    errore_buffer = ''
                    in_errore = False
                righe_formattate.append(';'.join(riga_corrente))
                riga_corrente = []

            colonne = testo.strip().split()
            errore_idx = next((i for i, c in enumerate(colonne) if 'Errore' in c), None)

            if errore_idx is not None:
                in_errore = True
                errore_buffer = ' '.join(colonne[errore_idx:])
                riga_corrente = colonne[:errore_idx]
            else:
                riga_corrente = colonne

        else:
            if in_errore:
                errore_buffer += ' ' + testo.strip()
            else:
                colonne = testo.strip().split()
                riga_corrente.extend(colonne)

    if riga_corrente:
        if in_errore:
            riga_corrente.append(errore_buffer.strip())
        righe_formattate.append(';'.join(riga_corrente))

    with open(path_csv_output, 'w', encoding='utf-8') as f:
        for r in righe_formattate:
            f.write(r + '\n')

    print(f"‚úÖ CSV generato: {path_csv_output}")

# === MAIN: esecuzione completa ===
if __name__ == "__main__":
    path_originale = "Riepilogo.txt"
    path_pulito = "Riepilogo_pulito.txt"
    path_csv = "Riepilogo_format.csv"

    rimuovi_intestazione(path_originale, path_pulito)
    converti_txt_in_csv(path_pulito, path_csv)


---

üìÅ Output

Riepilogo_pulito.txt ‚Üí File senza le prime 3 righe

Riepilogo_format.csv ‚Üí CSV con:

Righe ben separate

Colonne strutturate

Sezione "Errore" raccolta correttamente anche su righe multiple




---

Fammi sapere se vuoi:

Intestazioni nel CSV (Codice;Polizza;Errore‚Ä¶)

Conversione in .xlsx

Apertura automatica in Excel


Te lo completo subito.

