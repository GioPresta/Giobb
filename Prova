import pandas as pd
from datetime import datetime
import time

def processare_repcommg():
    with open("REPCOMMG.TXT", "r", encoding="utf-8") as file:
        lines = file.readlines()
    
    risultati = []
    for line in lines:
        if len(line) < 80 or "SD" in line:
            continue
        
        polizza_text = line[0:11].strip()
        polizza = int(polizza_text) if polizza_text.isdigit() else polizza_text
        
        garanzia = line[11:16].strip()
        if garanzia.startswith("T"):
            garanzia = garanzia[1:]
        
        fondo = line[16:35].strip()
        
        comm_text = line[35:62].strip()
        commissioni = float(comm_text) / 10_000_000 if comm_text.isdigit() else 0.0
        
        tipo_op = line[62:64].strip()
        
        data1_text = line[64:72].strip()
        data2_text = line[72:80].strip()
        
        data1 = None
        data2 = None
        
        if len(data1_text) == 8 and data1_text.isdigit():
            try:
                data1 = datetime(int(data1_text[0:4]), int(data1_text[4:6]), int(data1_text[6:8])).date()
            except:
                pass
                
        if len(data2_text) == 8 and data2_text.isdigit():
            try:
                data2 = datetime(int(data2_text[0:4]), int(data2_text[4:6]), int(data2_text[6:8])).date()
            except:
                pass
        
        risultati.append({
            "Polizza": polizza,
            "Garanzia": garanzia, 
            "Fondo": fondo,
            "Commissioni": commissioni,
            "Tipo_Operazione": tipo_op,
            "Data_effetto": data1,
            "Data_competenza": data2
        })
    
    return risultati

def processare_commgfnz():
    with open("COMMGFNZ.TXT", "r", encoding="utf-8") as file:
        lines = file.readlines()
    
    risultati = []
    for line in lines:
        if len(line) < 137 or "SD" in line:
            continue
        
        polizza_text = line[0:11].strip()
        polizza = int(polizza_text) if polizza_text.isdigit() else polizza_text
        
        tariffa = line[11:16].strip()
        if tariffa.startswith("T"):
            tariffa = tariffa[1:]
        
        fondo = line[16:35].strip()
        
        comm_text = line[35:62].strip()
        if comm_text.isdigit():
            commissioni_base = float(comm_text) / 10_000_000
            commissioni = round(commissioni_base * 0.76754, 2)
        else:
            commissioni = 0.0
        
        tipo_op = line[119:121].strip()
        
        data1_text = line[121:129].strip()
        data2_text = line[129:137].strip()
        
        data1 = None
        data2 = None
        
        if len(data1_text) == 8 and data1_text.isdigit():
            try:
                data1 = datetime(int(data1_text[0:4]), int(data1_text[4:6]), int(data1_text[6:8])).date()
            except:
                pass
                
        if len(data2_text) == 8 and data2_text.isdigit():
            try:
                data2 = datetime(int(data2_text[0:4]), int(data2_text[4:6]), int(data2_text[6:8])).date()
            except:
                pass
        
        risultati.append({
            "Polizza": polizza,
            "Tariffa": tariffa, 
            "Fondo": fondo,
            "Commissioni": commissioni,
            "Tipo_Operazione": tipo_op,
            "Data_effetto": data1,
            "Data_competenza": data2
        })
    
    return risultati

def main():
    start_time = time.time()
    
    print("=== PROCESSAMENTO FILE ===")
    
    print("Processando REPCOMMG.TXT...")
    dati_repcommg = processare_repcommg()
    print(f"✓ REPCOMMG: {len(dati_repcommg)} righe processate")
    
    print("Processando COMMGFNZ.TXT...")
    dati_commgfnz = processare_commgfnz()
    print(f"✓ COMMGFNZ: {len(dati_commgfnz)} righe processate")
    
    print("Unendo tutti i dati...")
    tutti_dati = dati_repcommg + dati_commgfnz
    
    if tutti_dati:
        with pd.ExcelWriter("output_unificato.xlsx", engine='openpyxl') as writer:
            df_repcommg = pd.DataFrame(dati_repcommg)
            df_commgfnz = pd.DataFrame(dati_commgfnz)
            df_finale = pd.DataFrame(tutti_dati)
            
            df_finale.to_excel(writer, sheet_name='FINALE', index=False)
            df_repcommg.to_excel(writer, sheet_name='REPCOMMG', index=False)
            df_commgfnz.to_excel(writer, sheet_name='COMMGFNZ', index=False)
            
            for sheet_name in ['FINALE', 'REPCOMMG', 'COMMGFNZ']:
                worksheet = writer.sheets[sheet_name]
                
                if sheet_name == 'FINALE':
                    num_rows = len(df_finale)
                elif sheet_name == 'REPCOMMG':
                    num_rows = len(df_repcommg)
                else:
                    num_rows = len(df_commgfnz)
                
                num_cols = len(df_finale.columns) if sheet_name == 'FINALE' else (len(df_repcommg.columns) if sheet_name == 'REPCOMMG' else len(df_commgfnz.columns))
                
                for col_num in range(num_cols):
                    col_letter = chr(65 + col_num)
                    
                    if col_num == 0:  # Polizza
                        for row in range(2, num_rows + 2):
                            worksheet[f"{col_letter}{row}"].number_format = '0'
                    elif col_num == 3:  # Commissioni
                        for row in range(2, num_rows + 2):
                            if sheet_name == 'COMMGFNZ' or (sheet_name == 'FINALE' and row > len(df_repcommg) + 1):
                                worksheet[f"{col_letter}{row}"].number_format = '0.00'
                            else:
                                worksheet[f"{col_letter}{row}"].number_format = '0.00000000'
                    elif col_num >= 5:  # Date
                        for row in range(2, num_rows + 2):
                            worksheet[f"{col_letter}{row}"].number_format = 'dd/mm/yyyy'
        
        end_time = time.time()
        execution_time = end_time - start_time
        
        print(f"✓ File Excel creato: output_unificato.xlsx")
        print(f"  - Foglio FINALE: {len(tutti_dati)} righe totali")
        print(f"  - Foglio REPCOMMG: {len(dati_repcommg)} righe")
        print(f"  - Foglio COMMGFNZ: {len(dati_commgfnz)} righe")
        print(f"⏱️ Tempo di esecuzione: {execution_time:.2f} secondi")
        
    else:
        print("✗ Nessun dato trovato")

if __name__ == "__main__":
    main()