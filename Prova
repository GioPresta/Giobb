Perfetto! Ecco uno script Python completo che:

Legge tutti i file .txt nella stessa directory in cui si trova lo script.

Applica la logica che hai definito.

Scrive il risultato in un file chiamato output_merged.txt nella stessa directory.



---

üêç Script Python

import os

def process_file(filepath, include_header):
    lines = []
    with open(filepath, 'r', encoding='utf-8') as f:
        raw_lines = f.readlines()

    output = []
    i = 0
    found_header = False

    # Cerca riga con LIVELLO
    while i < len(raw_lines):
        if 'LIVELLO' in raw_lines[i]:
            found_header = True
            break
        i += 1

    if found_header:
        header_start = i
        header_end = i + 6  # inclusa la riga LIVELLO
        if include_header:
            output.extend(raw_lines[header_start:header_end])
        i = header_end + 4  # salta 4 righe dopo l'intestazione
    else:
        return []  # File non valido

    # Estrai le righe fino agli asterischi
    while i < len(raw_lines):
        line = raw_lines[i]
        if line.strip().startswith('***'):
            break
        if not set(line.strip()).issubset(set('-')):  # salta i trattini
            output.append(line)
        i += 1

    return output


def main():
    current_dir = os.path.dirname(os.path.abspath(__file__))
    txt_files = [f for f in os.listdir(current_dir) if f.endswith('.txt')]
    txt_files.sort()  # per processarli in ordine

    merged_output = []
    for idx, filename in enumerate(txt_files):
        filepath = os.path.join(current_dir, filename)
        include_header = idx == 0  # solo per il primo file
        result = process_file(filepath, include_header)
        if result:
            merged_output.append(f'--- FILE: {filename} ---\n')
            merged_output.extend(result)
            merged_output.append('\n')

    output_path = os.path.join(current_dir, 'output_merged.txt')
    with open(output_path, 'w', encoding='utf-8') as out_f:
        out_f.writelines(merged_output)

    print(f'‚úÖ File creato: {output_path}')


if __name__ == "__main__":
    main()


---

üìå Dettagli

Il file output_merged.txt conterr√†:

L‚Äôintestazione (LIVELLO e 5 righe sotto) una sola volta (dal primo file).

I dati utili di tutti i file (saltando trattini e fermandosi agli asterischi).

Un separatore --- FILE: nomefile.txt --- prima di ogni blocco.




---

Fammi sapere se vuoi anche:

Rimuovere i nomi dei file nei separatori.

Cambiare il nome dell‚Äôoutput.

Usare una codifica diversa (es. `ISO


