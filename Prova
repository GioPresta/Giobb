import os
import re

# Riconosce riga di chiusura con asterischi
END_SECTION_PATTERN = re.compile(r'^\s*\*{5,}\s*$')
# Righe solo decorative (es. ----, ****, etc.)
DECORATION_PATTERN = re.compile(r'^[\s\-\*=_\.]{4,}$')
# Intestazione "LIVELLO ..." (inizio sezione)
START_HEADER_PATTERN = re.compile(r'^\s*LIVELLO\b', re.IGNORECASE)

def extract_error_lines(file_path, header_saved_flag):
    with open(file_path, 'r', encoding='latin1') as f:
        in_section = False
        collected = []
        for line in f:
            if not in_section:
                if START_HEADER_PATTERN.match(line):
                    in_section = True
                    if not header_saved_flag[0]:
                        header_saved_flag[0] = True
                        collected.append(line.strip())
            else:
                if END_SECTION_PATTERN.match(line):
                    break
                elif not DECORATION_PATTERN.match(line) and line.strip():
                    collected.append(line.rstrip())
        return collected

def merge_all_reports(output_file='riepilogo.txt'):
    current_dir = os.getcwd()
    txt_files = [f for f in os.listdir(current_dir)
                 if f.endswith('.txt') and f != output_file]

    all_lines = []
    header_written = [False]  # flag modificabile dentro le funzioni

    for txt_file in txt_files:
        file_path = os.path.join(current_dir, txt_file)
        lines = extract_error_lines(file_path, header_written)
        all_lines.extend(lines)

    with open(output_file, 'w', encoding='utf-8') as out:
        for line in all_lines:
            out.write(line + '\n')

    print(f"âœ” Report finale generato in '{output_file}'.")

if __name__ == "__main__":
    merge_all_reports()
