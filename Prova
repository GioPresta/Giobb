"""
DISCLAIMER: Questo codice è SOLO per scopi educativi.
NON utilizzare su Teams o altre applicazioni aziendali.
L'uso improprio può violare policy e causare conseguenze legali/lavorative.
"""

import pyautogui
import time
import random

# Disabilita il failsafe (muovi mouse in angolo per fermare)
pyautogui.FAILSAFE = True

def click_casuale(x, y, variazione=5):
    """
    Click con piccola variazione per sembrare più umano
    """
    click_x = x + random.randint(-variazione, variazione)
    click_y = y + random.randint(-variazione, variazione)
    pyautogui.click(click_x, click_y)
    print(f"Click effettuato a: ({click_x}, {click_y})")

def movimento_mouse_casuale():
    """
    Muove il mouse in modo casuale per simulare attività
    """
    screen_width, screen_height = pyautogui.size()
    x = random.randint(100, screen_width - 100)
    y = random.randint(100, screen_height - 100)
    
    durata = random.uniform(0.5, 2.0)
    pyautogui.moveTo(x, y, duration=durata)
    print(f"Mouse mosso a: ({x}, {y})")

def autoclicker_base(intervallo_min=60, intervallo_max=180, durata_minuti=30):
    """
    Autoclicker base con intervalli casuali
    
    Args:
        intervallo_min: Secondi minimi tra azioni
        intervallo_max: Secondi massimi tra azioni
        durata_minuti: Durata totale in minuti
    """
    print("Autoclicker avviato. Premi Ctrl+C per fermare.")
    print("Muovi il mouse nell'angolo superiore sinistro per emergenza (failsafe)")
    
    # Tempo di preparazione
    print("Inizio tra 5 secondi...")
    time.sleep(5)
    
    start_time = time.time()
    durata_secondi = durata_minuti * 60
    
    try:
        while (time.time() - start_time) < durata_secondi:
            # Intervallo casuale tra azioni
            intervallo = random.randint(intervallo_min, intervallo_max)
            
            # Scelta casuale dell'azione
            azione = random.choice(['click', 'movimento', 'entrambi'])
            
            if azione == 'click':
                # Coordinate da determinare manualmente
                # Esempio: area centrale dello schermo
                screen_w, screen_h = pyautogui.size()
                click_casuale(screen_w // 2, screen_h // 2, variazione=100)
                
            elif azione == 'movimento':
                movimento_mouse_casuale()
                
            else:
                movimento_mouse_casuale()
                time.sleep(0.5)
                screen_w, screen_h = pyautogui.size()
                click_casuale(screen_w // 2, screen_h // 2, variazione=100)
            
            print(f"Prossima azione tra {intervallo} secondi...")
            time.sleep(intervallo)
            
    except KeyboardInterrupt:
        print("\nAutoclicker fermato dall'utente.")
    except Exception as e:
        print(f"\nErrore: {e}")

def trova_coordinate():
    """
    Utility per trovare le coordinate del mouse
    Utile per identificare dove cliccare
    """
    print("Muovi il mouse sulla posizione desiderata.")
    print("Le coordinate verranno stampate ogni 2 secondi.")
    print("Premi Ctrl+C per fermare.")
    
    try:
        while True:
            x, y = pyautogui.position()
            print(f"Posizione mouse: X={x}, Y={y}", end='\r')
            time.sleep(0.5)
    except KeyboardInterrupt:
        print("\nRilevamento coordinate fermato.")

# Esempio di utilizzo con coordinate specifiche
def autoclicker_coordinate_specifiche(coordinate_lista, intervallo=120):
    """
    Click su coordinate specifiche in sequenza
    
    Args:
        coordinate_lista: Lista di tuple (x, y)
        intervallo: Secondi tra ogni ciclo
    """
    print(f"Avvio click su {len(coordinate_lista)} posizioni...")
    time.sleep(5)
    
    try:
        while True:
            for x, y in coordinate_lista:
                click_casuale(x, y)
                time.sleep(random.uniform(0.5, 2.0))
            
            print(f"Ciclo completato. Attesa {intervallo} secondi...")
            time.sleep(intervallo)
            
    except KeyboardInterrupt:
        print("\nAutoclicker fermato.")

# MAIN - Decommenta la funzione che vuoi testare
if __name__ == "__main__":
    print("=" * 50)
    print("AUTOCLICKER EDUCATIVO")
    print("=" * 50)
    print("\nATTENZIONE: Non usare su applicazioni aziendali!")
    print("\nOpzioni disponibili:")
    print("1. trova_coordinate() - Trova coordinate mouse")
    print("2. autoclicker_base() - Autoclicker con azioni casuali")
    print("3. autoclicker_coordinate_specifiche() - Click su posizioni specifiche")
    print("\nDecommenta la funzione desiderata nel codice.")
    
    # Esempio 1: Trova coordinate
    # trova_coordinate()
    
    # Esempio 2: Autoclicker base (2-3 minuti tra azioni, per 30 minuti)
    # autoclicker_base(intervallo_min=120, intervallo_max=180, durata_minuti=30)
    
    # Esempio 3: Click su coordinate specifiche
    # coordinate = [(500, 500), (600, 600), (700, 400)]
    # autoclicker_coordinate_specifiche(coordinate, intervallo=300)