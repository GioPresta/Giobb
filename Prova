Perfetto, ripartiamo da zero come richiesto, tornando alla versione che:


---

‚úÖ Logica di Estrazione Richiesta (versione originale)

Per ogni file .txt, applicare sempre la stessa logica:

1. Trova la riga che contiene LIVELLO.


2. Copia quella riga e le 5 successive (totale: 6 righe).


3. Poi copia tutte le righe successive fino alla prima che inizia con ***.


4. Salta qualsiasi riga che √® fatta solo di trattini (es. ----- o simili).


5. Non copiare la riga con ***.




---

üêç SCRIPT Python - VERSIONE STABILE

import os

def process_file(filepath):
    with open(filepath, 'r', encoding='latin-1') as f:
        lines = f.readlines()

    i = 0
    # Trova la riga con "LIVELLO"
    while i < len(lines) and 'LIVELLO' not in lines[i]:
        i += 1

    if i >= len(lines):
        return []  # Se non c'√® LIVELLO, salta il file

    output = []

    # Copia LIVELLO + 5 righe successive (6 righe in totale)
    output.extend(lines[i:i+6])
    i += 6

    # Copia righe fino agli asterischi, saltando i trattini
    while i < len(lines):
        line = lines[i]
        if line.strip().startswith('***'):
            break
        # Salta righe fatte solo di trattini (es. "-----")
        if not set(line.strip()).issubset(set('-')):
            output.append(line)
        i += 1

    return output


def main():
    current_dir = os.path.dirname(os.path.abspath(__file__))
    output_filename = 'output_merged.txt'
    output_path = os.path.join(current_dir, output_filename)

    # Elenco di tutti i file .txt tranne l‚Äôoutput
    txt_files = sorted([
        f for f in os.listdir(current_dir)
        if f.endswith('.txt') and f != output_filename
    ])

    merged_output = []
    for filename in txt_files:
        filepath = os.path.join(current_dir, filename)
        result = process_file(filepath)
        if result:
            merged_output.extend(result)
            merged_output.append('\n')  # separazione tra i file

    with open(output_path, 'w', encoding='utf-8') as out_f:
        out_f.writelines(merged_output)

    print(f'‚úÖ File unificato creato con successo: {output_path}')


if __name__ == "__main__":
    main()


---

üìå Cosa fa questo script

Fase	Azione

Riconoscimento LIVELLO	Sempre per ogni file
Copia intestazione	6 righe da LIVELLO incluso
Dati	Tutto sotto, fino a *** esclusa, saltando trattini
Separazione	Una riga vuota tra file, nessuna intestazione o nome file
Protezione	Se LIVELLO non c‚Äô√®, il file viene ignorato senza errori



---

Fammi sapere se vuoi:

Che includa la riga *** come fine blocco

Che logghi a terminale i file processati

Che rinomini l‚Äôoutput con timestamp


Lo script ora √® pronto, solido e coerente ‚úÖ

