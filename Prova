Perfetto! Ora ti propongo la versione definitiva dello script, con tutti i requisiti integrati, inclusa l‚Äôultima condizione:


---

‚úÖ Requisiti finali implementati

1. Una sola volta: le prime 6 righe da LIVELLO (intestazione) vanno prese solo dal primo file.


2. Dagli altri file: le righe con LIVELLO e le 5 successive vanno saltate.


3. Dopo quelle 6 righe:

Salta 4 righe.

Poi salva tutto fino alla riga che inizia con ***.

Escludi righe fatte solo di trattini (-------).



4. Non includere righe con ***.


5. Ignora output_merged.txt se gi√† presente nella cartella.




---

üêç Script Python completo

import os

def process_file(filepath, include_header=False):
    with open(filepath, 'r', encoding='latin-1') as f:
        lines = f.readlines()

    i = 0
    # Trova la riga con "LIVELLO"
    while i < len(lines):
        if 'LIVELLO' in lines[i]:
            break
        i += 1

    if i >= len(lines):
        return []  # LIVELLO non trovato

    output = []

    if include_header:
        output.extend(lines[i:i+6])  # Prendi le 6 righe di intestazione

    i += 10  # Salta 6 righe (LIVELLO + 5) + 4 righe successive

    # Estrai righe fino agli asterischi, escludendo trattini
    while i < len(lines):
        line = lines[i]
        if line.strip().startswith('***'):
            break
        if not set(line.strip()).issubset(set('-')):  # Salta trattini
            output.append(line)
        i += 1

    return output


def main():
    current_dir = os.path.dirname(os.path.abspath(__file__))
    output_filename = 'output_merged.txt'
    output_path = os.path.join(current_dir, output_filename)

    txt_files = [
        f for f in os.listdir(current_dir)
        if f.endswith('.txt') and f != output_filename
    ]
    txt_files.sort()

    merged_output = []
    for idx, filename in enumerate(txt_files):
        filepath = os.path.join(current_dir, filename)
        include_header = (idx == 0)  # Solo per il primo file
        result = process_file(filepath, include_header=include_header)
        if result:
            merged_output.extend(result)
            merged_output.append('\n')

    with open(output_path, 'w', encoding='utf-8') as out_f:
        out_f.writelines(merged_output)

    print(f'‚úÖ File creato correttamente: {output_path}')


if __name__ == "__main__":
    main()


---

üìù Output

output_merged.txt con:

intestazione LIVELLO + 5 righe una sola volta (dal primo file)

blocchi di dati da tutti i



