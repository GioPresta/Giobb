import os
import pandas as pd

input_file = "GCA_00032_i006_BCCVITA_2025-07-31.txt"

# ---- PREPARAZIONE FILE TEMPORANEO ----
with open(input_file, encoding="utf-8") as file:
    lines = file.readlines()[1:]

with open("temp.txt", encoding="utf-8", mode="w") as temp_file:
    temp_file.writelines(lines)

# ---- VECCHIO BLOCCO: PROCESSING AVANZATO + EXPORT PRIMO FILE EXCEL ----

# Modifica qua le colonne (esempio dal tuo codice)
columns_requested = [1, 2, 4, ...]  # <-- I tuoi indici reali
column_indices = [i - 1 for i in columns_requested]
column_headers = [
    "DTA_RFR", "NUL_PLZ", ...     # <-- I tuoi header (quelli vecchi!)
]

df = pd.read_csv("temp.txt", sep='|', header=None, dtype=str)
df_selected = df.iloc[:, column_indices].copy()
df_selected.columns = column_headers

# Gestione colonne date
date_columns = ["DTA_RFR", "DTA_NAS_A1", "DTA_DEC", "DTA_SCA", "DATA_SCAD_PREM1"]
for col in date_columns:
    if col in df_selected.columns:
        df_selected.loc[:, col] = df_selected[col].str.replace(".", "/")
        df_selected.loc[:, col] = df_selected[col].str.replace(r"^(\d{4})/(\d{2})/(\d{2})$", r"\3/\2/\1", regex=True)

# Gestione colonne numeriche
numeric_columns = [
    "NUL_IST", "NUL_PLZ", ...    # <-- le tue colonne numeriche
]
for col in numeric_columns:
    if col in df_selected.columns:
        df_selected.loc[:, col] = df_selected[col].str.replace('.', '', regex=False)
        df_selected.loc[:, col] = pd.to_numeric(df_selected[col], errors='coerce')

base_name = os.path.splitext(os.path.basename(input_file))[0]
file1 = f"{base_name}_filtered.xlsx"
df_selected.to_excel(file1, index=False)
print(f"File 1 pronto: {file1}")

# ---- NUOVO BLOCCO: EXPORT RAW + HEADER PERSONALIZZATO ----

# Rilegge dal temp.txt (tutte le colonne)
df_raw = pd.read_csv("temp.txt", sep='|', header=None, dtype=str)

# PERSONALIZZA QUI i tuoi header
custom_column_names = [
    # "CUST1", "CUST2", ..., "CUST137"
]
if len(custom_column_names) != df_raw.shape[1]:
    raise ValueError(f"Devi inserire {df_raw.shape[1]} nomi in custom_column_names")

excel_numbered_names = [f"Column {i+1}" for i in range(df_raw.shape[1])]

from openpyxl import Workbook

wb = Workbook()
ws = wb.active
ws.append(custom_column_names)
ws.append(excel_numbered_names)
for row in df_raw.values:
    ws.append(list(row))

file2 = f"{base_name}_raw.xlsx"
wb.save(file2)
print(f"File 2 pronto: {file2}")
